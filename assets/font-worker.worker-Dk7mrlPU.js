(function(){"use strict";const _=async t=>{let A,Q;if(typeof t=="string")try{A=new URL(t)}catch{Q=t}else A=t;if(A)try{A.protocol==="file:"&&(Q=(await Promise.resolve().then(function(){return b})).fileURLToPath(A))}catch{}if(Q)try{const g=await(await Promise.resolve().then(function(){return b})).readFile(Q);return new Uint8Array(g.buffer,g.byteOffset,g.byteLength)}catch{}if(!A)throw new Error(`Your runtime does not support any loading strategy for ${t}.`);return new Uint8Array(await(await fetch(A)).arrayBuffer())},y=async(t,A)=>{if(typeof t=="object"&&"byteLength"in t)return await WebAssembly.instantiate(t,A);if("instantiateStreaming"in WebAssembly){const Q=typeof t=="string"?new URL(t):t;if(Q.protocol!=="file:"){const g=await fetch(Q);return await WebAssembly.instantiateStreaming(g,A)}}return await WebAssembly.instantiate(await _(t),A)},L=async t=>{const A=()=>{throw new Error("Not implemented")};let Q;const g={fd_seek:A,fd_write:A,fd_close:A,proc_exit:A,emscripten_notify_memory_growth:()=>{Q=new DataView(o.exports.memory.buffer),C.HEAPU8=new Uint8Array(o.exports.memory.buffer)}},E={env:g,wasi_snapshot_preview1:g},{module:e,instance:o}=await y(t,E);Q=new DataView(o.exports.memory.buffer);const D=o.exports.__indirect_function_table,C={wasmMemory:o.exports.memory,HEAPU8:new Uint8Array(o.exports.memory.buffer),stackAlloc:o.exports._emscripten_stack_alloc,stackRestore:o.exports._emscripten_stack_restore,stackSave:o.exports.emscripten_stack_get_current,addIndirectFunction(a){const I=D.grow(1);return D.set(I,a),I},withStack(a){const I=o.exports.emscripten_stack_get_current();try{return a()}finally{o.exports._emscripten_stack_restore(I)}},readUint32(a){return Q.getUint32(a,!0)},writeUint32(a,I){Q.setUint32(a,I,!0)},readFloat32(a){return Q.getFloat32(a,!0)},writeFloat32(a,I){Q.setFloat32(a,I,!0)},malloc(a){const I=o.exports.malloc(a);if(I===0)throw new Error("Out of WASM memory");return I}};for(const a of WebAssembly.Module.exports(e))switch(a.name){case"memory":case"_emscripten_stack_alloc":case"_emscripten_stack_restore":case"emscripten_stack_get_current":case"malloc":case"__indirect_function_table":case"_initialize":continue;default:C[`_${a.name}`]=o.exports[a.name];break}return o.exports._initialize(),C},K=(t,A=[])=>{try{postMessage(t,void 0,A)}catch(Q){postMessage({type:"error",message:Q,originId:t.originId})}},p=async t=>{const A=await L(t),Q=A.addIndirectFunction(A._free);class g{constructor(C){if(typeof C=="number"){this._ptr=C;return}const a=A.malloc(C.byteLength);A.HEAPU8.set(C,a);const I=A._hb_blob_create_or_fail(a,C.byteLength,2,a,Q);if(I===0)throw new Error("Failed to create blob");this._ptr=I}ptr(){return this._ptr}destroy(){A._hb_blob_destroy(this._ptr)}data(){return A._hb_blob_get_data(this._ptr,this.length())}length(){return A._hb_blob_get_length(this._ptr)}asArray(){return A.withStack(()=>{const C=A.stackAlloc(4),a=A._hb_blob_get_data(this._ptr,C),I=A.readUint32(C);return A.HEAPU8.subarray(a,a+I)})}copyAsArray(){return this.asArray().slice()}}class E{constructor(C){if(C===0)throw new Error("Tried to create an HbSet from a null pointer");this._ptr=C??A._hb_set_create()}ptr(){return this._ptr}add(C){A._hb_set_add(this._ptr,C)}addRange(C,a){A._hb_set_add_range(this._ptr,C,a)}del(C){A._hb_set_del(this._ptr,C)}delRange(C,a){A._hb_set_del_range(this._ptr,C,a)}clear(){A._hb_set_clear(this._ptr)}invert(){A._hb_set_invert(this._ptr)}reference(){A._hb_set_reference(this._ptr)}destroy(){if(this._ptr===0)throw new Error("Set already destroyed");A._hb_set_destroy(this._ptr),this._ptr=0}union(C){A._hb_set_union(this._ptr,C._ptr)}intersect(C){A._hb_set_intersect(this._ptr,C._ptr)}subtract(C){A._hb_set_subtract(this._ptr,C._ptr)}size(){return A._hb_set_get_population(this._ptr)}copy(){const C=A._hb_set_copy(this._ptr);if(C===0)throw new Error("Failed to copy set");return new E(C)}setTo(C){A._hb_set_set(this._ptr,C._ptr)}[Symbol.iterator](){const C=this._ptr;return function*(){const a=new e(C);for(const I of a)if(typeof I=="number")yield I;else for(let c=I[0],i=I[1];c<=i;c++)yield c}()}iterRanges(){return new e(this._ptr)}}class e{constructor(C){this._ptr=C,this._last=4294967295}next(){return A.withStack(()=>{const C=A.stackAlloc(4),a=A.stackAlloc(4);A.writeUint32(a,this._last);const I=!!A._hb_set_next_range(this._ptr,C,a),c=A.readUint32(C),i=A.readUint32(a);return I?(this._last=i,{done:!1,value:c===i?c:[c,i]}):{done:!0,value:void 0}})}[Symbol.iterator](){return this}}const o=A;return o.HbBlob=g,o.HbSet=E,o},Y=t=>(t.charCodeAt(0)&255)<<24|(t.charCodeAt(1)&255)<<16|(t.charCodeAt(2)&255)<<8|(t.charCodeAt(3)&255)<<0,M=t=>String.fromCharCode(t>>24&255,t>>16&255,t>>8&255,t>>0&255),O={adlam:"GicPNQZDBEECShYgyBVCp2cCCwYRAgwUEwEWFvoVuSEBMv/qDUuhAQkdAQ==",ahom:"GiaAAtiUAenEBxo7DicW","anatolian-hieroglyphs":"GiaAAtZ9648JxgQ=",arabic:"GiaAAsEV/wGhBS/BBB5BAQ9KmQEc01wCCQF+5DeftAZyhwK8A/8GNXpDD4ECBA2GAdURG4EuHsUBAnUDifwGAwsaOQEGBgUJFwMKBA4KBAQFAgkBBgYEBAQEBQEGBwMLBhEDCwMKBQkXEC0CCQQNEIsBAQ==",armenian:"GiYa5gHQCdMIJVExaQKGaijQFo/VBgQ=",avestan:"GiYc5AEuq30ByTgBofMGNXMG",balinese:"GiAGPsIBwWlMnQEx+xICghc=",bamum:"GiaAAoGYBVfBhQa4BA==","bassa-vah":"GiaAAtiUAYmUCh1BBQ==",batak:"GiaAAsFsM3kDnxACghc=",bengali:"GiaAArgIqxoBJwE5AwsHFQEJFS8GEAkDDQgXAQkDGAsBBwQPGNRLBAcBBhISBgoHAq0MAtwCphTKjAQ=",bhaiksuki:"GiaAAtd9AoIX6dgHCBUsXQ0xHA==",brahmi:"GiaAAtd9AoIX6agHTaUBI1o=",braille:"GiaAAsGdAf8B",buginese:"GiaAAsFlGz0B2xcCgheGkAQ=",buhid:"GiaAAqtaARcTlyMCghc=","canadian-aboriginal":"GiaAAqICrAYjA17zQ/8E4RJFuDTJ0wcP",carian:"GiaAAi7GfgaoN9/RBjA=","caucasian-albanian":"GiaAAsgJWlrciQGp4QYPoRwzfg==",chakma:"GiaAAo0lCbUZCZc/AoIX6awHNG0R",cham:"GicCDwILAx0BCsIBGr19Agr4FumQBDaBAQ0hCRkD",cherokee:"GiaAAsEJAggPATEBGwHhQVWxAQXx3QRP","chinese-hongkong":"","chinese-simplified":"GiaAAsG9AQMLFjEBSVWxAWbZASq3BASGAvMDAQq/aQEGBAUEDQEHAQcDCwcTAQcEDQEGBgQEBQkZAw0BBwUPAgkDDQUUBg8BBhYIBwEHAQcEDQQOBQIJAQcBBwUPAw8BBgsBCQMLBA8BBwEIBQYVAggFAgoEBAQEBAcCDAQEBAgJAQkEFQMNAwoEBQEJAQYFAgoEBAQFAQ4GBAsEDQIJCRcDDgYHAQgFCBUBCQEGBAYEBAQMCAQHAQYFBQ4FAQ8BFAcDEAkDEwEGBwQMBgUCCQMKBAYEBAgQBgUCCAUBBgQFAggGBAYEBQYcCAQECgkCCgUBDgoEEhoFBA4EBQEMBgoIDwUVAQYHAQgNAQYECAYOEAQNAQoaDQEMBAgEBgQIBAoIBgwOBBIQBBcCCQYRAwsCCAQEBAQMBgUCCQMLCRcCCgsFDwEMBgQEBQEKBAUBBwURAQcFEwIKCAUBBgUCCAQVAgsBCAQJAQYFAggGBQUPBA8CCAcBCQENBAwGCQEJAwwEDQUOCQIMBgUCCQEIBAsBEAQEBQEMBgYQBAgJAgwIFAUEDAsDCgkCCAgGBQEGBAgEBAoEBwEHAQsCCgQPBRAECgkCDwEGCgUBDQIICAcBBg4JARcCCwMKBAUDDQsaBAUEDAUBBgQJAgkCCQEICAYFAgoFAhQGBAYEBgcBBwELAQoICggFAgoFBxMBBwUOCRQtBA0CDAUBBgUPJgUEEQQNBA0FDwEHAwoFAQgEBQEIBAYEBQEJAQ4EBAQLBhAFAQkCCwIIBAsBBwIIBQcfAQcHEgUCDgYEBQMKBQMLBxIGBgcCCAkFEQEKEAUBCgYFAQYNAgoOCgQEBgoFAwsCCQEOBgUBBgcBDAgFAQ4GBAcDDQQNAgsDDQEGBAUCCQEHAgwEBgkCCQEGEAcCCAUDCwIJAggQEgcMHAQFAQYEBAcDCwEKDAYLAQcBCAQTAQcBCQEJAgoLAQsBBgQGBAgEFgUBDAcDCgwECQQSBgQFAQcBGA8CChgIFwEMBgobAQgOBgcBBwcVAggEBQYVAQkCDQEGBAYECwEIBAgGCAkDDAYGDwEIBAQKBQEJBBQHAQcEDgQFAwoECAgIDwMSBgkBEQELBA4GBAUBEBsBCgkBBg0BBgUBDQEcEAUDCggFAQcCGAgQBAQGDA0BCQEMIAUBCgYHAQYIFgUBFBIKBAkBEwEJAQYGBQIQBQEMJggEBg4EBBIMDwEHAgkBCAcBCA4GBQcXAgsBBgcBBgYEBQIJAgkBBgcDDggEBwIIBwEGBwQMDAQGBAYHAQ0BBwMOCwIJAggGCwEJAQYJAQ0CCwMNAQkBDwIKEAcCDwQPAQYFAw8JLAQIBAUGEgoECgcBCQEIBAgRAQYEDAkDDAcBDgoKEAkBCBMEDgomEQEIKQEMBAcBCQEQBgwEBAgOBAYGDioIBhYIDg8EDgQEBhEBIwEHChgHAggHAw8BBgQGBAYHAQYEBQIJAQgIBAUPJwIIBAcDCwELAgoFAxAIBQIXAggHBQ8BBgQGBQEHBA0BBwEGBQUPBA0DCgUBBg4GCgYEBgkKGQIJCRoSBQEJARAGBBAHCCAJAQgFBRcBEAUCDAQJARAEBgYIDg4QBwIIBAYFAQ4KBAsBCQEQBgYFAQoYBAkBDhIUBwIIBBAGHAYGChwFBA4cPAYGEBAhAQkBCQQMBwEHAwwIBQIJAgkBBggHAQsCCAUDFwIMBQMMBwINAQwFARARARsCFA8CCAUHFwEHAQgLAgkEDQEHBxUBCgQRBBIGDwMWBggLAQcBEBIHAQgLBRIFAQoEBAQFAQgJAQYHAggIBAQIBAUBBgQEBAwIBAkBBgUCDAkBBwMLAQcBCQEGCAQFAQkCCQIJBRMDCgUCCgQGDwILAQwEBAQIDQMTAQcFDwQNAQkBCAYHAQ4IDAUFDwIVAQgFAgoFAgsBCwMKCgwNAQgFAgoKBAYEBggTAw0FDwEIBQEGBQMKCwELAQcBEAQICwEIBgUCCQEGBQEGBAQHARUCCwEOCAYEBAcDDwMLBhEBBgcBEA8BCwIQCwELAQkBCAcEKhIHAQYGCAYIDQELAQ4ECwISCBIGBQEIGgQJAgoMCBAICAUDEwEqGAcDFQESBAUGEwEGBQYSBggEBQIJAgkCCgcDEwIJAw0EDgYQBwEHCBQGBgYFAgwLARECCQMLAgsDCwEIBwEMCAgFAggGBQUPAwoFAgkGEgcBBwQPBQ8BCAsDCwENAg4GBAYJAQcEDQIKBQEKBg8BCAQGBwEIBQUUDgUBBwINAQ0BBwINAQkBDAUBCwIKBwMOBAYLAwoFAwoEBAUCCwEGBBAEBggFAQYICQENAQYNAQkBDgQEBAYHAgoQBQEJAQYMBAYMBgUBEQIMBwEIBgUCCBAECAwSBB8CFQEGBBMCChINAQoFAwoFAwsBBwINAgoEBwEHAQoECAQIBAQEBAwQDAQEBCQMCQIPAhAIDgUBBgcBDgYIBgQEBQQMBQELAggMCAQFAQcBFQEMBAUBBgUBBggEBQEIBAcBBgQFAgkBEAQHAQYFAggNAQcBEQEUBAcEDwMKBAcCCQIMBAkBBwEGBQELAgwIBQEMBQEMBQILAhAEBwIQBQEIBwUQCQEMBAUBDQIMBQEICAQEBAcBCgkBDQEOCwELAQgGBgYKBBYFAQgaBwIJAQwGBggFAg0BCQQOCwEGBAYJAQYIBAQNAQYFAwoEBwEMBgYFAQgFAQgFAwoGDAUDDgcCCgUEDAQKBQEGBQEIBAQKBgQEBgUCDQEGBAcBBgUCCAcCHAwLBRIEBAUCCAYIBgcCCQEQBwINAQcCCQEHAQYEBwEQBwENAwwVAgsCCQMLAQcBCAQFAQcDEgkDCwQjARIECQEUCAgMCgkCDgUCCAUBFgQECgQECgYGBAsBCBIEBQIJAQsBDAUBCAYGBQEKFBASBggKCQMKEBMBDgcBBgYGCgUBEAUCCwEMBAQFAgwNAQ8BGQEIBQEOBggMBA8EDQEQBggcCgwGBAQGEQEOBAsBDgQECwIOBAgHBhgGCBsBDgQUDBAGBAQIFAQIBhYOBQEICAoWcBIMCwEGHQMOFgwECBEBBgYIEhEGEQETAgsCCQEMBQEHAQcCEQIKBAQOJwEGBgQHAwwMBQILAwoEBAwUCBwlAgkBBwMKCAUDCxQvAQcCDQEHAQ4KBAcHFAkCEAQEBAcBCQEJBQ8BCAcBBwEIBgQIBQYRAgkBCAQLAQcEDAcBCwEGDwIICAYFAwoGBQEJAwoEBQEHBA4GDwEOCgQEBg4EBQEKBwEIBwcSBQgXBhMDCggGBgcBCwEMBwEKDAYHAQgECwILAQYFBA0BBwQRAQgGBggHAQsDDwEMCgUCCwEIBgQFAQcBBgYEBAUFHAcGEQEIBgcBBgcBBwIMBwEGBgQEBQISBQINAQkBCAoEBggEDAcBCQEMFQIKBQEIDQEODQEGBgYEBwEKBAYECAQJBxYMBQILAwsCCQEHAgkBGBUBBwEKBgwJAhoEDwIMBQIODQEKCQEIBAgGCAcBBwEIBAQPAQYICAQECAgICwEeCgYGBhIGBg8DDQEGBA0BCAwHAwwOBwEGGiIEEwEcCBIIJgYSDAoRAgkBDQEG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","chinese-traditional":"GiaAAsG9AQMKBxMrAQjJAyr3cwEGCQQNAQcBCQIJAQ0BEAoEBgQNAQcBDwEGBgYFAgsBCAUBCQMaFBYICAQHAQYHBBAEBwEHAQcCCAcDEA4NAQcBBwEJAQYPBRMCDQIKEAQJAQoEBAQRAQkEEAcBCgobAQoEBAQFAQ4HAg8EDQIJCRcBDgYHAQgFAgsCCQELAQYEBgQEBAsCCgQjAQ8CFAcCEQEHBBUBBgcEHgUBBgUDCgQIBAwGBQIIBQEGBAUCCAYFAgoFBSgOCQIKBQEOCgQSGgUDEgYKEAgPAhUBFQENAQYECAYIBggMBAkBChYEDQEICAgECgQEBAUBBg4FAQgOBBIQCwEHAgsCCQYRAg4EBgYEDAYFAgkDDAkDDggOBQEIBAUBCAQSBAUBDAQIDQENARAEBAcCIwEJASEBBgYFAgoHAQYHAggIBwEMDA8BCQIMBA0CCQEOBAgFBRYECwIdAQsBCAYEDAQJAQkDDAgUCQEIBgcCCB4EBgQIBBIGBQIIBQIKBBgGBAYFAQkBDwEGCgUBDQIICAcBBg4KBBALAwoEBQMMCQMMBgQEBQEMEwIIBAUCCAgGBCgEBgQMEAoSEAsDCg4FAQoIBQUPCxoGBwEMBQEGBQomBQMTAwsDDAQFAQcBBwMKBQEIBAQIDBwEBAQTAggFAQkCCQMKBQELAQYEBAcBBgQZBxIEBAoGBQUOBQMRARAQBgkFEQEKEAUBCgYFAQYNAgomCwUOBAUBDgsBBggLAQ0BDgUBBgUDDhcCDQEGBAUCCgUCCwEGBgkCCQEGEQEHAggHAggMEwMQBAcDCggFAQYEBQEGBQEOBgkBDgYMBQEJAhAFAQsBCBAECwIIBAQFAQYIBQEQBgQKCQMSBAUBCQQOBAYEBQEQCgQPAgoECAYSBgwMBQEMCwEPAgoIBgYHAQcEDgYHAQwTAQwJAQkBCAQLAQgECAYICwELAQYGEAYEDgYHBCgGBAUCDggEBBcBEhAPAQwFARgOGwESBg0BEAcCCgYcBQMKCAQHAgkBKAgGDAsCCwEWFwIOBgcBBggIEgQICAgKBAYECQEUCggFARUBCAQKEAYGCQIYBAQGDQEIBAoFAQgVAQcBFA4ECwILAQYIBAYEBQIJAggNAQ4ECAcCDwMNAQcBBgwECgYHAQ0BBgUBCQELAxIGBAcBCQMPAQgFAgoNAQkBDwIKEAkBBgcEEAQFAQ4FAQYEBAQODAgEBAwGCgQKBwEJAQgECBoECAkBDAcBGAoICAkBCAYUBgoJAR4KBwIIEhcBEAcBCQEQBQEXAggOBAYGGAsBFgcBBwEYCAwGDAwEBAgPAQgEDQELAQcFDwMKBwIOBQELAQYEBgUBBgQEBAQFAgkBCAgEBQUXBBQEBAcDCwEOBgUDEAgFARkBBwEHBQ8BBgQLAQYEDgYHBA0CCAoIEAQMBAoNBQ8DDQIIBwYUCAYIBAUBEAYEECYJAQgaCgYFAgwECQEgCA4PAR4EBwEGCAQKBAgMDgYGBQEGBAoECgQWEhQHAggEEiAGBiYEBhoGBA4OIQEGBQEOFAoEBA8BCQEJAwwGBwMMDQILAQgMCgcCCAUBBhAMBAwHAg4GBwISEQEGEAUCEwERAggFAQcDEgYGCg0CCgQIDQEKBA8FFAcBBgkEFwEGCAYFAQcBFA4HAQgKBQEGCAUBCgcDCwEICA8BBggICAQKFAQEBAQTAgwKBQEGBQQPAQYIBAYHAgwFBRMCDwIKBAUBEQIJAhIEBAgMBA8BBwMPAw4HAQgNAQ4IDAQFAR8BCAUCCgUCCwELAwoKDBkCCg4GBAYJARMDDQUPASALAQoHARAECAsBCAoTAQcCCAcCFQILAQ4IBgQEBwMOFQQMBwIQCgUBCwIQCwIKCAkBCBIGDwEMBwEJAxAEBgQKBwELAQgGBAYFAhIIEQEIBQEHAQ4UBwIJAQ4IEAgLBDAIBgQMCAcDCgQFAhMBBgUCCQILAQkCDAUBCAkBCgQFAggPBBUCCAUBCQMOBhAFAREEDAYHAQYFAgwLARECCQMmBwEMCAgHAQYGBAUDCwUPAgkGLQMKBQEICwMLAQ0CDgYKJAUBCgYPAQkBCgcBCAUFFCUCCAUCCQELAQkBBgYFAgsCCgcBBggFAQYJBAwFAwoEBCAHAQYFAQoFAQYICQENAQYNAQkBDgQGGg4FAQkBBwEMBAYEBAQGBQETAREBBwEGHQEGCAgFARIEDQEIBwUYBgUBEgUBBgcCDAkDDgUDCgUBEwEHAQcBBwEGBwEHAQoECAQMBAQEDAcDCgcBBwIIBAwSCgkBCQENAxECCg4FAQYHAQ4GCgQECQQRAQsBCAwMBQEHARcBCgoJAQoEBAUBCAQHAQYJAQkBEAQHAQsCCA0BBwERARgHAQcBCQMKBA8CDAQJAQcBBgUBCwISBwEMBQEMBAQHAgwPAhAGBgYQBwIKBAQEDQIMBQEICAwHAgoJAQ0CDgQGDAYGBgYJAQYSBQMgBgcBCAwGBggFAgsCCgUCCgsBBgQPAQYIBAQPAgkEDgcBDAYSBQENAwoGDAUCHgUEDAQKBQEGBgYEBAoFAQYEBgUBJwEJAQcCHAwLBRMCCQIMBggGBgQFAg4KKAcBFhEBHwEJAQkDCwEHAQgEBQEHAUYSBAkBFAkBCAwFAQcBCwEMBQIIBB4KBAQKBgUBBgsBCAkBDgcBCAkCGAwFAgowDAgKCAQGEBMBDQEJAQYFAQgEBgUCEAUCFggQDQINAhQFAgoFAQ0BCAgMBBEDCgYMFggKCwESBAQFARIOBAkCDwEGBAoaBwILAQ4HAQgbAQ4FARQqCAoKBAgGCg0BDAgGCAoGDwEiDwEJAQ4LARIKBQEUCwEMBggVAQYeDAQHARMBBgYEBBIECAUGEhALAggICQEGBwEaBAwMDgUCCgYEBgQHAQ0BDAQEBwIJAgohAQgcCgwPAgkBBgYECAkBBwIJAgkCCwEKDAUCDBAECgQEBQYbAg8BBgQECAcBCQQNAgoHAQcBCAYEIQMMBAsHEgcBCwEGDgQECAsDCgYGBwMKBBgGDgoECgQEBggGBQMOBwIJAQcGEjEBDgcDDQEGBQEMBwIQBgYFAgoECwIuCQEIBQEHAQoHAQYFAw8BCAUBCgUCDAYHAgkEDQEGBAUCCQMYKQIIBQIJAxMBBgYECAQEBAsBDgcBEgQGCBAIBwEKLA0BDg0BBgYHAgsBCgQGBAgECwEHAQYJAQYGBQIKKAYGBAcBDwEHAQoGDAkCDgwFAQYJAwwFAg4NAQYgBggGBwEIBAQPAxYEBAQEBAQFAg8BBggGEwEIBgYOBAwPAyoGBgkCCg8BBwMYCA8BCAQIBAgGBQEGBQIPAhQEGAoSCggGCwEGBwEMBAoMBAkBEwEKCAgFAgkBGAoFBBAJAQYcBAoGBAkCCBAWCgYECBkBBhYFAQYJAgwTAg4hAQYGBAgIBgYEDQUQBAgMCg4MCgYEBgQNARIICggICgYFAQsCDAQEBQELAQYHAQ0CDwIQCgUBBwEQDQEIFh4FAQgLAQcDCwETAgwMDQEGBAUDEAQMBgQKBAQHAQgSChIOCgoGHAYEBBQEBAoEDwESHQILAR0BGQEGBQIO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",chorasmian:"GiaAAqG8CBs=",coptic:"GiYZAh0BzAEukwkCCQEHARQkOD4GJwHdAQ3WZ4YJhgEGBQHoFekac/MBBrwEOQHjvwYC+RIb",cuneiform:"GiaAAsH9CJkHgRBu4QEEIcMB",cypriot:"GiaAAsGBCAIPLGEIkxsFEAUrWwEKBg==","cypro-minoan":"GiaAAsGBCAGhugFi","cyrillic-ext":"GiaAAoEPL2UdQX2dXwroENk0H8HhA1/d3wIB",cyrillic:"GiaAAsIJ/wNfoQIBQQHMcQ==",deseret:"GiaAAsGNCE8=",devanagari:"GiaAArgIiRl/oU8p9wwCcsgBIm64E8mJBAnhAh/ByAMJ","dives-akuru":"GiaAAsHhCAYSBwcTAQcdPwEJCysJ",dogra:"GiaAAroiTwvPWgKCF8mJBAmhvwM7",duployan:"GiaAAi6hCQEGMwHRcwKCF+AhibcMauEBDCEIIQkZBw==","egyptian-hieroglyphs":"GiaAAsG9CdUIwRGaHw==",elbasan:"GiaAAi6cCZkCECUGbgQE3IcB6fwGJw==",elymaic:"GiaAAoG9CBY=",ethiopic:"GiaAAtwJ5TtIlQEDDQYQBQMNKFUDDSBFAw0GEAUDDQ4hOHUDDUKLAR9HGYFoFkEGEQYRBhEGEQYRBhEGEQbT9AMFEQURBR8GEQbx8gkGEQMLAQcO",garay:"GiaAAtgVHgjDnAglUxxLAQ==",georgian:"GiaAAi6kE68sJU4MBy+BLypbAroOzTIlTgyIBA==",glagolitic:"GiaAAi6YCQT+BQaEBOQtvj3NLl+GCdjgA6PmCQYRECcGEQEHBA==",gothic:"GiaAAi6bCQEIUv//Bxo=",grantha:"GiaAAuMiAScBjAkWYw3UQwUBQQINAacMAsoDuBPptAcDCwcVAQkVLwYRAQcEDQkZAQkCCg4NBhMGFQTBMQEG","greek-ext":"GiaAAsF5FTEFESVRBREHEgQEBR5DNG0OIQ0hBQ8SKwIJCA==",greek:"GiaAAqELBxUFFQYQBRMrXA==",gujarati:"GiaAAuMiAScBuwQCCQgVAgkVLwYRAQcEDwkXAgkCCiEDDQsnBqVUAtwCphTJiQQJ","gunjala-gondi":"GicBCgUIJgUDyAEuQEDbIQHPWgIbAQkBFNgH9A6p3gcFDwEHJE0BBwUbCQ==",gurmukhi:"GiaAAuMiAScBuwICCQUVAQkVLwYRAQcBBwEIBQQTAQkCDBEDChEQy1YC3AKmFMABiYgECQ==","gurung-khema":"GiaAAoojt94KOQ==","hanifi-rohingya":"GiaAAhYgohUeCEJA6AHvZAKCF+mcBydhCQ==",hanunoo:"GiaAAoFaFtcjAoIX",hatran:"GiaAAth9qaMHEikBDwQ=",hebrew:"GiYa5gHPCQGVCjZ/Gj8FuWgFvgLEFKPVBhk3BAwFAQcBBwk=","imperial-aramaic":"GiaAAsGeCBUvCA==","indic-siyaq-numbers":"GiaAAo4WcwmhAgmDlg9D","inscriptional-pahlavi":"GiaAAoGrCBIxBw==","inscriptional-parthian":"GiaAAsGqCBUxBw==",japanese:"GiaAAsG9AQMLF3lVsQFmz3UBBgkEDQEHAQkFFAYKCAYJAQoFAQcBCAcBBgwFAhEEEQIKHgQWBAQHAQcEDAcBBwEJAQcBBwQNAggHAwoGBggNAggFAQkBBwIPBRMCDQIVAQYECQEKDBEBCQQaBQEnAQoEBAQFAQ4HAQ8EDAQEBQUgDQEIBQENAQgIBgQGBAQECgQGBAcBFgUCEQEUBwIQCAUBCAcBBwEGBAQFAhcBCgUBBgQIDwEIBAQEBQEGBAcBDAQFAwsFHAYUCQIRAQ0BCgQSDgwFAggKBgoQCA8CKQENAwoOCAYJAQgEBAkBCggKBAQNARAIBAsCCAoSBQIIBAoEEhAKBwILAgkGEQMKBAQMBAwGBwYSCQMOCAQHAQkBBwEHBA0CCA4EBQIJBBEHGg8CCgUCFgsCCwENAQcBCAcBCwEHAgsBBgcBBwIJAQgGBgYMDwEGBQEKBAYHBRsBCAcDCgoECgYLAg0BDQYcBAgJAgwJAQYOCQEIDQQQBwEKBgQGBAQEBAgKBgUCDQMLAgkBGQEGBwINAQcBCQEGCgUBDQIJAQgHAQYOCgQECwMPAggFBRAJAw0BBgQEBAwGCwMLAgkBCAgGBCQEBAsBDQEHAQsBBgYGCg8BDQYYBQEGBAgFBA8LHQIIDgUBCwkmBAUBDgYFAxYFAQcDCgQIBQIMBhwSBA0BBgUCDQIKCAQLAQcCCCAFAQgHAQgHAQwJAgkCCAcCIhMBCQEHAQsBChAGDgUBEwEKBDEBBgQLAQwECQIQBggHAQ0BDjEBBgQHAQgFAh8CCQMXBQ4EDB0BBhoMBAYJASgECQESBhYFAgocDAUBBgQEFBQEBBYSCAUCFAgEDA0BCAoKGAQGEgwEDAkDEAwGBAkBBwEIBAYWBAUBDwEIBQEJAQsBBgQEBwEIBAgGDwIOBg8BCAoECgYJAyYGBAcBLAYNAQYQGgUCEAwGGgYGCgYJAggMBwEIIgYFAQYIBAcBCwEWCAgIBgwLAgsBDAYHARUBDwEGBwMOCA4ECgQGCAoKBBwICgYSBgYKCwMMBggEBgQKBAQFAgoFAQ0BDwEHBBIFBBIPAQ0BDQEHBBQGBAUFEQENAQ4MBwIPAw0BBwEGDAQGBQMKBAsBCgoJAxIGDAYGBAQMBAYIDA4EBhAGBAsBBwENAQYTAQYFARgKCAQEDBAOBAQHAQwIDA0BDgkBDAYiEAgIBCYmEQFFAgsBEAUBCg0BFgQGBiMBHgUBFhgQBAgECBAEBgQXAQkBBwEHAwoJAwwECwEGBAYEDAYEBQIJAggMBQYQBwQYBAcDCwEOBwUOBggFAhIFAgkBBwUOBgQGBQEGBAkBBwEHBxMCCAQGCAwEBAgKCA8JGwEGBQEHBAwEEgUBCQEQBQEGCgYmCQEIGg8BBwEMBAcCCwEGDgQkDwERAgoFAQ4JAQYUCAYGBwcWBg5FAQYEBBQaBgYIBhgEBgkBChoKFAQSBgUBGgcBDQEICgUBCAQFAwwGBwQMCAUBCwEICwEMCgcCCBAMBAUBCAcCDgYHAggKBA0BBhAFAyMEDQcSBQEIBgoNAgoECA0BCgQRAxkCDwIPAQgGCQEGBQQTAQgJAQcBBwIJAgkBBgUBDQQNAgkFEAgNAggIBAQIBQEKBAYOBAQEBgQHAQYHAQsBCgcEDwEGCAQGBwYRAQcCDQMPAg4FARECCwENAQwHAQ4EDwEVAw0BCAgOCwEKBgYEBB8CCAcBCAUCCwELBhQEEg8CCgkBBgYEBgkBDQEHAw0FDwEMBBQFAQwFAg4EBQEJAQsBCAcBBwETBAwJARMCGAQKBAQHAggJARMBBwEHAQcCDwEGBgUBCwIQCwEKBA0BChARAwwEBwEHBBIEBwIKBAcBBgUBCAcDCwQWCAoGCAUBCAQHARYGBAUBBggICAgKBwcUJgYYBAUCCAUEGQIJAgkCCAQJAQcCCAoICQIJAgwGCQIRAggFAQwEBgYGBAYKDAYKBgYFAgkCDwERBxUBBhsBDAgIBQIOBwUPAQcFEQIJAgsBGQMKBAUCEwEHAQ0CCgoQDBEBCAgWBwIYBwEHAQwEChcCCAYICQEJAQwGCwEIBQEICAQGCQQMBQUWBQEOBgQHAQYGDQEGCAkBDgQMCgwECBgOBAgHAQwUBAkBEAQICAgYFB4EDA4EBBIKFQEGCggNAQoEBQEGBA4FAQ0BCAQMCgQIBA0DDQEMBgUBBgQIBwEGCiYJAQ8BDwIKCwUOBwEOBgoEBAkEEQELAQgMCAQFAQcBFwELAgoEBQEOBAUBCAQHAQYJAgkBEAQHAQoFAxEBCAYKBAQLAgsEDwEKEwERAQkBCAQFAQsBEgcBDAUBDAQLAhAGBQMQBAgGFwIKBAUDEQIMBAgOBQEJAg4GCwIOCggKBgwJAQgEBgYGBBoHAQcBCAwGDgUDCwILBA4LAQYEBAsDDgUCEwIJBA4GBQIIBgQECgYLAwoGBgYFBxgGBQQMBAoFAQ4EBAUBCgoEBgUBCQIMBgwJAQcDFgYECAkDCwEKBAcBCgQGBAYFAQYFAhAHAQkCIgcBEAcBEQISBAkBCQEJAwwECwEHAQcBDAcBBggIGgUBEQEGBAQQBAkBCAgEBQEGCQIOBQIIBQEJAQYQBAcCCAoFAQcBBgsCCAgPAQgPAQ8BCQEIBwQODwMRAgkBBgQMCAQGCAQWEwINAQcCCQIVAQcCDQIJAgsCCwESCAYHAQ8BCg4OBwEGDgcBBgQIBwQMBgsBCwEVAQgECg4EBAQGBgsCEQIKBAQHAQcCEQIKDwEHAgoOBwEIGwEOBQEKGAwPAQoTAQYOCggFARAEBAoKBg0CIAQPAQkBFAQhARUBDBAIDgUCCAgWCwMNAQwIBAYEBAcBDAQIBQMKBwEMCQELAQYJAQkBBgcCCBEBBgwMDQEKBQQMBwILAQ0BDAUBCwIMBggZAQgIKg4EBQEICBEBIgcBDgUCHAQKBAYHAwoMBAwFARAHAQkCDgkBCAUBCAcCEQEUBgYECwcSBwELAQYOBAQEBAQJAggGBAsCCDEBDgoEBAcBDgkCEwEHAQYGBQEIBwErAQYPAQYHAQYEDAcCHAYIBAoECAUBKAYGBggICwINAQ0BCAcBDAYGBAQFAggGBAQEBQIYBQQYBAkCCAUCCQMMBQQaBAgKDgcBEgQGCBAIBwEICBECCBQHAQ4ECQEGBgYKCgYJAQgGCgUBCgUBDAUCFQEeBgYEBwEPAQcBCgYMBAUCGgUBEwENAQ4NAQYIHggHAQgKBA8DDggEBAkCCAQQBgwUBQEODgQMDwMMHQEIBgkCCg8BBwEGBAYICAYQBAgECAYFAQcCEwEMCAQYHAoOFhAJARIJARsBCggOJwMOCwIgBggUCAQkEAgYFgsBBgoKIAwaBgQPAQgSBQMKBgQeDggECgsBCgwSCAoQCgoLAQwEBAUBBhEBDQIPAhIIBQEIDg4GFhoEBQEIBAcBCwYZAgsBDg0BBgQEBQEMBBIECgkBBwIOFggUBAoKBgYIBhMCCBAEBAoEBAsCEgcBFwILARwZAQsCCAwJAgsBDAUBEQENARUBEhgKBAwEBgYFARQGBAQWJhMBEgoEDAQHASIECgoHAQgODAoFAQgyBhsEEAoEKAkDCwILAQ0BDQEIBhAKECYIChIaGgoKEAgFAQkBBgoFAg0CGwITAgoEBAYEBAUBCgUBBgcBCwMPAQcCFAQHBAwEBgsEDgQFAwsCCAYHAQcCEgYJAQcCCwEGBgwGDAQMDQIIBwEJAg0BBgQGBgoFAQkBBgYJAQ4OBQIQBAUBBhAEBCUDCgYSCA4OCQIMDAgECAsBDQMKCAQIBAUEDAcBBwIKBgQGBgcBKgQIBwMQBwEIBAQGCgkBCwEHAQYFAggGCAgECAYGBgYHAgkBIAcCDQIKHQEGBAgOJwEOBAUBBgYcCwEaBgYaBAoPAQgGBgYFAggQDBQHAhEBBgQECQIMEgwUDAUBGAsCGgQMCgwwHQEIBgQQCgsBDQIKBAQEBhIIBQEMDAoEBAYJAQsBDQEIDBsBCgYKEggMDgcBEBoJAiAEBAUBDwISBgUCCgcDCgYGChQGCwILAQwHAiATAQgIBAYNAQkEGAQNAQgGDgQFAQcBBgYIFgoQBgUBDgcDCgcBHgcBDAkFDwEIBgkDFBUCEAQKCAQHAQgEBAUBChUBBwMUFQELAhAICgkCCQEHAQYEBwEGCQEHAQcEDQEKBgUBDgUCDgYEBAQFAQoEDwEGBgQLAQYIDgUBCBkBBwEHAgkDCgQOEAQKBAUBCQEMGQEKBAQGBQEHAwsBBgQSBggGCBEBCAUBBgUBCBwGCQIKCAwHARQODAkDDBAEBAgHARsBDQMMEwEHAQoEBA8BCwEQDgQSBwIQBAQGBAYFAQgIBQEHAQcBCAUBCQIQCQEGBAYKCAgIBAgFAggKEAYEBAQFAQgEBAUCDQEGBgkBBwUTAhcBBwIJAQYJAQwHBBMBBwIQCgYHAgoEDAcCCQEICBgMCA0DDAcBEwcTAQgFAQcCFAcBCgUBCAYEBQIJAQgJAQgGBgQODAcBCwISEgcBBwIKCgYHAQgEBQIJAQgEBgkBBg8CCwEJARMBBwEIBhIFAggHAQ0BCAUCCQIICwG2AgQEFg8CCQEJAQgPAREEDgQEBgUCFwEHAwoEBAwMBwENAQsBDQEICAUBCggJAQoEDAUBGQEMBgQKBgwFAQsBBwMRAQoEBgUCCgoOFgYKBAQOCBAIBAQJAQcBDg8BBwIJAQYJAg8DCgUBEAYEBQEGCQEICQEHAQYFAQYMEwEGDAQQBwIJAQgHARYEBggJAQwHBSsBEgwMBAQMChAKBgUBBwIYDQEMBgUBCAkCDwEHAQwECggECgUBCAcBCwEQBgQGBAcDCggFAQoIBAsCDwEIBAUBBgYNAQ8CCAcBCAUDCwIIBAkCCwEHARcDCgoFBBYOIwIKBAYEBAQFAQkBBwELAhAaBAoOCAQNAQ0CCAQECwEGBBAZAwwEBQEHAQYEBQIMDAUBDQITBA4KEQIMDgoGCAUBBwIJARAKCQENAQYMNgQECQEUBAUBCgoGCAkCCAwFAQ4IEAgICgQECgYECAcBFAQJAwoGCAQNAQgJAxAaBA8BBgoIBgkBFAYKEggNAgoGBQQMCAQFARIEDgoICgYGBBgKDQEHAQgEBgQHAggHAQwHASYEDBAHAQ4WBQIJAQYKBAoNARIQBwEGCwMMDgUBBhILAgoUDgQIBwEGDQEIBgQFARIEBQQNARcBEBAIBQEMDwERAQsBHAUCCggJAQkBEgcBCBAWBQEgHQEGCQEMBAUBEggMEAQfAhIEHQENAg0BDhwFAQYEBQEOCgQHAQwKBwMZAQYGBAUBCAUCCgkBDgQEEggWBggIFAUBBgoEBAQNAQgGBAQIDAQEDgYWJAYSCAgPAQYGCAUBCgoEHB4GCQEGBAYOEQIICQEZAgwUCgYECgQEBA0BDQEKBAQFAQkCDgYKBAYEDQIJAQ4GBAoJAQYKCAQOBgUBCQEGEAUEHAsBCQEJAQYEDhUCDQEJAgwEBgYECAUBFwEQCwEYBAYMBQETARQRAgwECAYEBgQGDwEGBAcCCQEKCAcCCA4LAQcBBgYHARAGBQEmEAUBDgcBHAgQBQEMBAQEBAYHAgoEBAgECgYIBQEGCQIOCgQRAgkBDgYEBQEIBgUDCwMYDAUBBgQHAQoEBAYECAUBBwMKCQEIBA4GBgYEBgkCCAYICQIIBQIIBQEKBQEIBAkBBggFAggGCgQECAUBBwIIBwEMBAcBEAwKBhAGBQEQBAUCCg4LAQkDCgYMBgYOBAQEBQEIBwG8AgYKBAoEBAQEBAoKDwETAh0CCAwGCQEHAhAICwEHAg8JFwIJAgsCCQURAQYHAQgEDwIIBAUCCAgGGwMVAQcBBwEGBQEJAQacAQUBCgQHAQcBCBQICh4UChYOCAgTAQgOCQEGBAQECgUBCggEDgYTAg8BHQIaDAkBHAQHAwoICggNAQkBHgQEDAoHAQYHAQYIBQEMEBMCCwIeDwEGBQMQEggHARIaBwMQBAkBBg0DDgUCCA4HAQwICwEGBwEIBQIKBwIWCgYFA3UBBwEKCQENBRQHAgoGBQEUBgYMEAcBCQIIBQEKBwMMBwEGBQEMBQQNBA0BCQYUDgcBCQEHAQgEBwEIBAUCCQkXAQgEBQEGBAcBCwIKBwMKBQEHBRAFAQwEJAYEBAoECAYSEggaDQEGCAoQBAwKIA4oBgQvBRIEBAQVAQYJAQYNAQYFARYKBAQEBgQKCgwEDQEKCwEIBA0BDQMLBhYEBwIIBAQHAR8BDgYdAQgHARQWBhAGEAsBCQEGCg4HAQgIBAQWGgQGBBgEBQEGBQImFAQsBiQLAQgLAQwEBBQTARMCEAUBCAQHAQcBCAYLARQOBA4ECwEKGAQODgQcEAUBCBoLAggSFAoRAQ0CDggHAQg2CBIHAQsCEhQVAQYEDgYbAhMBCAQEEAwKBAsDCuwDEgUBCgUCDAQFAQYFARAFAwsBDAoOBQEGCggGBQERAggICwEIbgoOBAkBCBIJAQYEDwIJARkEDwQQBAgFAQcDCgYRAQYFAQcCDwEHAgkBCgYJAQYNAggFAwsBCwEJAwoFAwwJAQgFAQ8BDAUBDAQJAQYECggFAggHAggEBgYGBAwGBgwEDQELAQoEBAUBFAgGBgQFAggEBQEGBAgGCwEGCgcCDgQFARIICAYGBAYEDQEgBgQGEBIjAQsBBwEMCAUCCQEGCAcEEQEGDgYRARAHAQkCFgsEEwEIBgYSCAkCCQFqBAoEChsBBisBCAYOBAUCCgQRAg4ECQEGCAUCDAsBBwEICAgEHwEKBggFAQsCCgR/Ax4GCQIPARIKBwIIEQIKBgYEBAYXAQkBDgYIBAgTAQkBDh4GCg4OBAUBBhAQBAcBCgYFAQsCfgoGEAgICBYEBQEKDQEJAQgJAQcCCAYGCBYkBAoHAQYFAw8BBwEVAQ0EGQIIBggEKgoeFgcCCwETARIFAQcBDgoODAcBDAUBBgQKDQMOEQIKHgQFAgkBCAUDEgwHARMDCg8CChECGAoGDA4eBNoBBAQFAQoHAQYaBwMQCAYMCAgGBAUCIgcBBgYEBBEBEgcCCQEIEAYGEBoEDBYUCgQIBgQIBQEPAQYEEggMGg4EBg0CCjsBCK4BBwEKBAQOBwENAggEDAQNAQkBCBcEDQEMEQQMBAkBBwMKCgYOCgUBBgUCGQEOCgQXARgeBhkBCQEIBBcEDwEIBAwJAS4QDwEIw/0CXMQDBA==",javanese:"GiaAAtd9AoIX6Y4ETZ8BCh8B",kaithi:"GiYa5gGNIwnLWgIK+BbKIf/nAwmhoQNCmgE=","kana-extended":"GiaAAvO/AQOv/QsDCwYRAQeiAg==",kannada:"GiaAAuMiAScBuQwMHQIJFjEJFwQPCBUCCQMXAREBBwMNCRcCvj8FARAwBK8MAtwCphTJiQQF",kawi:"GiaAAsH5CBAlKFkc","kayah-li":"GiYa5gHXfQIK+BbpjAQv",kharoshthi:"GiYa5gHXfQIK+BbpkAcDCwEPBxMCCRw/Ag8JIwg=","khitan-small-script":"GiaAAoi9C7ls1QP+Bw==",khmer:"Gic/gwEdfhYEHItbXcEBCSEJ4Qcf1xgCghc=",khojki:"GiaAAo0pCctUAoIXyYkECaGnAxEnLg==",khudawadi:"GiaAAokjAdFaAQ8B8hbJiQQJgaoDOoEBCQ==","kirat-rai":"GiaAAsGyCzk=",korean:"GiaAAqPCAV2fAxzBARvB5gOjVw==",lao:"GiaAAsM3AQYFBA0XMgUWMwQMBQYRCRkD30QCghc=","latin-ext":"GiaAAsEBMGUfReYC0QUJFwUPCR8kTQELATYMr2e/AYEEnwHlAw3cBIECCxsTzAGbLR+B6wOtAeECAQYFBzsN",latin:"GidegQJfogJDAdMFARYoBEkBBwELATYMsnMOBBEBCwIJAgwIGQEPARbQAewB3gEE/gEG1PMG/AM=",lepcha:"GiaAAsFtN3cOJQL9DgKCFw==",limbu:"GiaAAokjAbk+HkELIQsgCQuPGwKCFw==","linear-a":"GiaAAs+BCCzzE7YCgQUVQQc=","linear-b":"GiaAAsH9BwsbGTcSKQEHDiMNYXqBAgIPLGEI",lisu:"GiYa5gG4CCKGdfU/AY3TAy/A6wM=",lycian:"GiaAAvR+zYgHHA==",lydian:"GiaAAi70tQHf6wYZPg==",mahajani:"GiaAAi7bIgvPWgKCF8mJBAnBpAMm",makasar:"GiaAAoH5CBg=",malayalam:"GiaAAs4JON0YAScBuQ4MHQIJMmkCCQUVDyUZ6D0wswwC3AKmFMmJBAI=",mandaic:"GiaAAsAWgQgbPNteAoIX",manichaean:"GiaAAsAWl2cCghfo4AaBMyZXCw==",marchen:"GiaAAtiUAcnaBx9FFS8N","masaram-gondi":"GicCCgUIJwXMAW5A2yEBz1oCGwEJARTYB/QO6dwHBhEBByteBQEHCCMJ",math:"GidegAIOCgpMQJcIAQYFARIEBgoZAQwHAQcBDAQYDokBECUGHRhACQE3AQkBxXABOQYUCAYIEg4QIwEJGjkMgQEMIgkKNxIpAQcKGSzbAR5BNYMBAQeLAqkEAxASBwU1RIwBMg0cahkFsQIB9gQICAwIEgRe5QECpwU/gQX/A50IA0UcnAPkENa8BgTH0gZUrQFGkQEBCAcBCQMLCxoFBhFAhQEDDQcTBhEbOwMLBAwJBhHTAq0FowLNBDHlWAMLGjkBBgYFCRcDCgQOCgQEBQIJAQYGBAQEBAUBBgcDCwYRAwsDCgUJFxAtAgkEDRCLAQE=","mayan-numerals":"GiaAAoHJDhM=",medefaidrin:"GiaAAsG2C1o=","meetei-mayek":"GiaAAtd9AoIXqZQEFsEDLWEJ","mende-kikakui":"GiaAAtiUAemIDsQBjwMP","meroitic-cursive":"GiaAAoGkCBc5Ey0t","meroitic-hieroglyphs":"GiaAAvp+x6QHHw==",meroitic:"GiY0zAGMfm7HpAc3eRMtLQ==",miao:"GiaAAtiUAemkCkqfATiBARA=",modi:"GiaAAtd9AoIXyYkECaG3A0ShAQk=",mongolian:"GicCEQEKJMIBwV0ZQVjBASqXHgIRARMBJjMBsRAT2AXrKAEPB+u4BgEJA79gDA==",mro:"GiaAAsGmCx5BCR0B",multani:"GiaAAokjAYUECbWgCAYQBQMLDiEK",music:"GiaAAtiUAbsCBq+mDfUBgQQmU8EBrwNF",myanmar:"GiaAAsE9nwGXQAKCF8SNBOUCHoECH+GxAxM=",nabataean:"GiaAAsGfCB5PCA==","nag-mundari":"GiaAAuGQDyk=",nandinagari:"GiaAAokjAYUOCYZAEhDtrAQF4cUDBxUtYQo=","new-tai-lue":"GiaAAsFjK2EZQQodAdsYAoIX",newa:"GiaAAi6IdaEIAoIX6bgHW7sBBA==",nko:"GiaAAtgVHgiWAa0FOnsCn2ADgBehIQHFvAYB",nushu:"GiYZAgkJIxlBGX7FfQH8PwT8d6TABZ7HA5+GAosD","nyiakeng-puachue-hmong":"GiaAAsGBDyxhDSEJHQE=",ogham:"GiaAAsFXHA==","ol-chiki":"GiaAAuFuL9IR","ol-onal":"GiaAAokjAdnxDipe","old-hungarian":"GiaAAtp9mgEHAag3IP/4BjKBATJ1BQ==","old-italic":"GiaAAsGJCCNbAg==","old-north-arabian":"GiaAAsGnCB8=","old-permic":"GiaAAi6SCQ0CGuAFsHHiE4n2Bio=","old-persian":"GiaAAoGMCCNRDQ==","old-sogdian":"GiaAAsG5CCc=","old-south-arabian":"GiaAAoGnCB8=","old-turkic":"GiaAAvR+rDeh9wZI","old-uyghur":"GiaAAsAW5JII/REZ",oriya:"GiaAAuMiAScBuwYCCQcVAQkVLwYRAQcEDwgXAQkCFQIPAQcEDxHoRTCzDALcAqYU",osage:"GiaAAsIJBg6aAeiJAcn7BiNRIw==",osmanya:"GiaAAsGPCB1BCQ==","ottoman-siyaq-numbers":"GiaAAsOxDzw=","pahawh-hmong":"GiaAAtd9AoIX6ZQKRaEBCRcGERQ1Eg==",palmyrene:"GiaAAoGfCB8=","pau-cin-hau":"GiaAAsHoCDg=","phags-pa":"GiaAAsNdAgiNIAQ1ARS6FukoAwoFFPPgAzeA1wI=",phoenician:"GiaAAsGhCBs+","psalter-pahlavi":"GiaAAsAWl2cCghfplgcRMwMhBg==",rejang:"GiaAAtd9AoIXyY0EI14=",runic:"GiaAAoFYWA==",samaritan:"GiaAAsEdLWEOgpgB",saurashtra:"GiaAAtd9AoIX6YoERZ0BCw==",sharada:"GiaAAuIijE4EBwEI1wwCghfJiQQFEJGlA18=",shavian:"GiaAAi6zjggv",siddham:"GiaAAtd9AoIX6b4HNXEl",signwriting:"GiaAAsHdDosFtwoEDQ4=",sinhala:"GiaAAokjAbsQAgkRKxczCBQHBhQLBQ4FBx0JGQKAPLMMAoIXq7AHEw==",sogdian:"GiaAAsAWl2cCghfJpQcp","sora-sompeng":"GiYa5gHgfYHDBxhBCQ==",soyombo:"GiaAAtiUAYnSB1I=",sundanese:"GiYa5gHBaz+BBQeXDQIK+BY=",sunuwar:"GiaAAsEJAQYUBjoIn+IIIWEJ","syloti-nagri":"GiaAAokjAYUCCctYAgsBigHuFemIBCw=",symbols2:"GiaAAsF9AQkEDN0OBZEFnwE=",symbols:"Rg4NCSMZQRk9IcZ+9wIDCwLdATNrBhcJPm8KGksBggJXAnkPIwcTBRETswEZNwQyHx1JCBcCCTifAQpBnwGBBeQCzQUDCxw9JE0EDz6FARczDZ8B/wHDBAHAAXxYqwQNJR13JlMfQ2bQAYOHAT/zyAUCjwVOoQEMIGEtoQQbgS4ewZEGE0ETQVbBARjBcithY+EBDiMOIQ4hJF+tAc0DGc8EAhAOBAUMLIQBCgojDCkBCwMsBQINBBUMMgkCCQImGhQOMgUBBgUDDQIOLiZMGgYMBAgTAxwICgkDDwMaBQIJAQwJBAwLAVkMI6sBggOBAS9uDAgGCCoKDwEGFQkbBBsKIQMPBRN29wFeywELICELITeBAQkhJ2EdQQshAYEBC3YWfCSmAS9TwQENIQwhCR83fw4jCiMIIZIBqQJl",syriac:"GicBEQMLAhoGPQKKARYKFpEJAQkBBiwHAhUBBwG4Cx8BCAQ+FworDCChAg0fO30CpwQKsFYEowgENjycB/QOyQIB",tagalog:"GiaAAsFZFT4tAa0jAoIX",tagbanwa:"GiaAAqtaAVcMHQIJAbMiAoIX","tai-le":"GiaAAsEJAQ8BCuk0CaEkHUEEtxoCghfrKAEPAw==","tai-tham":"GiaAAoFmPoEBHD8KIwkhDdcVApwI5g4=","tai-viet":"GiaAAtd9AoIX/4YEAesLQrcBBA==",takri:"GiaAAokjAc9aAoIXyYkECaG5AzmBAQk=","tamil-supplement":"GiaAAsH8CDF+",tamil:"GiaAAokjAb0IAQcFEwIJAw8BBgUBCwELAg0LIQQRAgkDDA4fFMtQAtwCphQ=",tangsa:"GiaAAqGnC06hAQk=",tangut:"GiaAAqG9AQ/+B+L3CUH3L4Fg/wWBFAg=",telugu:"GiaAAuMiAScBuQoMHQIJFjEPJQgVAgkDFwEHAgoHAw0JIwjGQTCzDAKCFw==",thaana:"GicBEQEIBBkBzAHYFR8BCIMBDMEEMZdiBBsBCQHgFszgBhY=",thai:"GiaAArgINlhcoSs5fRyZRwKCFw==",tibetan:"GiaAAsE5R5MBI1EmUSNLDiEM+0ACghf5KAM=",tifinagh:"GiaAAs4IdQEGBQEGNBy1cwJGvBbJHTd/ASA=",tirhuta:"GiaAAuMiAScBoQID/EuzDAKCF8mJBAmhsQNHoQEJ",todhri:"GiaAAsIJBgYUBJYBxYkIMw==",toto:"GiaAArgIqf8OHg==","tulu-tigalari":"GiaAAo0xCZhABPmsBAWCA5+qAwkWBgUlTwkWBgUDCwkXARUB",ugaritic:"GiaAAsGLCB0+",vai:"GiaAAsGRBasC",vietnamese:"GiaAAsUBAR0BMQGBAQFxAR8BowUBBwELATYM721Zlgg=",vithkuqi:"GiaAAqGTCAoZDiEGEQEHChkOIQYRAQ==",wancho:"GiYECwILA18CQARG+X0B4Bbp8w05fg==","warang-citi":"GiYO8gHXfQKCF6nLB1K+AQ==",yezidi:"GiaAAtgVHgiDAQnoAdmeCClXAgsB",yi:"GiaAAs4IIwEGygOZcQEJAT7UB48JE9gF6SgDCgcT5gOLvAOMCaESNuDlAoMEAQ8BCAUBGQEKOAQ9Aw0E","zanabazar-square":"GiaAAtd9AoIX6dAHRw==",znamenny:"GiaAAsG5Di1hFkFz"},J=(t,A)=>{let Q=0;for(let g=0;g<4;g++,A.offset++){if(A.offset===t.length)throw new Error("Truncated buffer");const E=t.charCodeAt(A.offset)&127;if(Q|=E<<g*7,(t.charCodeAt(A.offset)&128)===0)return A.offset++,Q>>>0}throw new Error(`Varint at offset ${A.offset} exceeds maximum encodable length of 4`)},N=function*(t){let A=0;const Q=atob(t),g={offset:0};for(;g.offset<Q.length;){const E=J(Q,g),e=!!(E&1),o=(E>>>1)+A;if(e){const D=J(Q,g)+o;yield[o,D]}else yield o;A=o}},S=t=>N(O[t]),d=["adlam","ahom","anatolian-hieroglyphs","arabic","armenian","avestan","balinese","bamum","bassa-vah","batak","bengali","bhaiksuki","brahmi","braille","buginese","buhid","canadian-aboriginal","carian","caucasian-albanian","chakma","cham","cherokee","chinese-hongkong","chinese-simplified","chinese-traditional","chorasmian","coptic","cuneiform","cypriot","cypro-minoan","cyrillic-ext","cyrillic","deseret","devanagari","dives-akuru","dogra","duployan","egyptian-hieroglyphs","elbasan","elymaic","ethiopic","garay","georgian","glagolitic","gothic","grantha","greek-ext","greek","gujarati","gunjala-gondi","gurmukhi","gurung-khema","hanifi-rohingya","hanunoo","hatran","hebrew","imperial-aramaic","indic-siyaq-numbers","inscriptional-pahlavi","inscriptional-parthian","japanese","javanese","kaithi","kana-extended","kannada","kawi","kayah-li","kharoshthi","khitan-small-script","khmer","khojki","khudawadi","kirat-rai","korean","lao","latin-ext","latin","lepcha","limbu","linear-a","linear-b","lisu","lycian","lydian","mahajani","makasar","malayalam","mandaic","manichaean","marchen","masaram-gondi","math","mayan-numerals","medefaidrin","meetei-mayek","mende-kikakui","meroitic-cursive","meroitic-hieroglyphs","meroitic","miao","modi","mongolian","mro","multani","music","myanmar","nabataean","nag-mundari","nandinagari","new-tai-lue","newa","nko","nushu","nyiakeng-puachue-hmong","ogham","ol-chiki","ol-onal","old-hungarian","old-italic","old-north-arabian","old-permic","old-persian","old-sogdian","old-south-arabian","old-turkic","old-uyghur","oriya","osage","osmanya","ottoman-siyaq-numbers","pahawh-hmong","palmyrene","pau-cin-hau","phags-pa","phoenician","psalter-pahlavi","rejang","runic","samaritan","saurashtra","sharada","shavian","siddham","signwriting","sinhala","sogdian","sora-sompeng","soyombo","sundanese","sunuwar","syloti-nagri","symbols2","symbols","syriac","tagalog","tagbanwa","tai-le","tai-tham","tai-viet","takri","tamil-supplement","tamil","tangsa","tangut","telugu","thaana","thai","tibetan","tifinagh","tirhuta","todhri","toto","tulu-tigalari","ugaritic","vai","vietnamese","vithkuqi","wancho","warang-citi","yezidi","yi","zanabazar-square","znamenny"],P=t=>{const A=t instanceof ArrayBuffer?new Uint8Array(t):t;let Q="";for(let g=0;g<A.length;g++){const E=A[g];E<16&&(Q+="0"),Q+=E.toString(16)}return Q};let B;const x=async t=>{B=await p(t);for(const g of d){const E=new B.HbSet;for(const e of S(g))typeof e=="number"?E.add(e):E.addRange(e[0],e[1]);k[g]=E}const A=B._hb_subset_input_create_or_fail();if(A===0)throw new Error("Failed to create subset input");const Q=new B.HbSet(B._hb_subset_input_set(A,6));Q.reference();for(const g of Q)f.add(M(g));B._hb_subset_input_destroy(A)},T=new TextDecoder,k={},f=new Set;class l{static manyFromData(A){const Q=[];for(const E of A){const e=new B.HbBlob(E),o=B._hb_face_count(e.ptr());Q.push({blob:e,faceCount:o})}const g=[];try{for(const{blob:E,faceCount:e}of Q)for(let o=0;o<e;o++)g.push(new l(E,o,e))}catch(E){for(;;){const e=g.pop();if(!e)break;e.destroy()}throw E}finally{for(const{blob:E}of Q)E.destroy()}return g}constructor(A,Q,g){const E=B._hb_face_create_or_fail(A.ptr(),Q);if(E===0)throw new Error("Failed to create hb_face_t");this.hbFace=E,this.hbFont=B._hb_font_create(E),this.fileSize=A.length(),this.faceIndex=Q,this.faceCount=g;let e=this.getOpentypeName(3);(!e||e==="")&&(e=B.withStack(()=>{const w=B.stackAlloc(32);return B._blake3_hash_data(A.ptr(),A.length(),w,Q),P(B.HEAPU8.subarray(w,w+32))})),this.uid=e,this.familyName=this.getOpentypeName(21)||this.getOpentypeName(16)||this.getOpentypeName(1)||"",this.subfamilyName=this.getOpentypeName(22)||this.getOpentypeName(17)||this.getOpentypeName(2)||"";const{styleValues:o,axisInfo:D,namedInstances:C}=this.getAxisAndStyleInfo();this.axes=D,this.styleValues=o,this.namedInstances=C;const a=[],I=new Set,c=new B.HbSet;for(const w of[Y("GPOS"),Y("GSUB")]){c.clear(),B._hb_ot_layout_collect_features(E,w,0,0,0,c.ptr());for(const s of c)B.withStack(()=>{const G=B.stackAlloc(4),r=B.stackAlloc(4);B.writeUint32(G,1),B._hb_ot_layout_table_get_feature_tags(E,w,s,G,r);const U=B.readUint32(r);if(I.has(U))return;I.add(U);const H=G;B._hb_ot_layout_feature_get_name_ids(E,w,s,H,0,0,0,0);const u=B.readUint32(H),j=this.getOpentypeName(u),m=M(U);a.push({tag:m,label:j,keepByDefault:f.has(m)})})}this.features=a;const i=[],n=c,F=new B.HbSet;B._hb_face_collect_unicodes(E,F.ptr());for(const w of d){const s=k[w];n.setTo(F);for(const u of[0,13,32,160])n.del(u);n.intersect(s);let G=n.size();w==="khmer"&&(G-=k.latin.size());const r=G/s.size();i.push({name:w,coverage:r,covered:r>(w.endsWith("-ext")?.05:.5)})}this.subsetCoverage=i,this.codePoints=F,n.destroy()}getAxisAndStyleInfo(){const A=this.hbFace,Q={};return B.withStack(()=>{const g=B._hb_ot_var_get_axis_count(A),E=32,e=[],o=[],D=B.malloc(g*E);try{const c=B.stackAlloc(4);B.writeUint32(c,g),B._hb_ot_var_get_axis_infos(A,0,c,D);for(let i=D;i<D+E*g;i+=32){const n=M(B.readUint32(i+4)),F=B.readUint32(i+8),w=B.readFloat32(i+16),s=B.readFloat32(i+20),G=B.readFloat32(i+24);switch(n){case"wght":{Q.weight={type:"variable",value:{min:w,defaultValue:s,max:G}};break}case"wdth":{Q.width={type:"variable",value:{min:w,defaultValue:s,max:G}};break}case"ital":{Q.italic={type:"variable",value:{min:w,defaultValue:s,max:G}};break}case"slnt":{Q.slant={type:"variable",value:{min:w,defaultValue:s,max:G}};break}default:{const r=this.getOpentypeName(F);e.push({tag:n,name:r,min:w,defaultValue:s,max:G})}}o.push(n)}Object.prototype.hasOwnProperty.call(Q,"weight")||(Q.weight={type:"single",value:B._hb_style_get_value(this.hbFont,Y("wght"))}),Object.prototype.hasOwnProperty.call(Q,"width")||(Q.width={type:"single",value:B._hb_style_get_value(this.hbFont,Y("wdth"))}),Object.prototype.hasOwnProperty.call(Q,"italic")||(Q.italic={type:"single",value:B._hb_style_get_value(this.hbFont,Y("ital"))}),Object.prototype.hasOwnProperty.call(Q,"slant")||(Q.slant={type:"single",value:B._hb_style_get_value(this.hbFont,Y("slnt"))})}finally{B._free(D)}const C=B._hb_ot_var_get_named_instance_count(A),a=[],I=B.malloc(4*g);try{for(let c=0;c<C;c++){const i=B._hb_ot_var_named_instance_get_subfamily_name_id(A,c),n=B._hb_ot_var_named_instance_get_postscript_name_id(A,c),F=this.getOpentypeName(i),w=this.getOpentypeName(n);B.withStack(()=>{const s=B.stackAlloc(4);B.writeUint32(s,g),B._hb_ot_var_named_instance_get_design_coords(A,c,s,I);const G=B.readUint32(s),r={};for(let U=0;U<G;U++){const H=B.readFloat32(I+(U<<2));r[o[U]]=H}a.push({subfamilyName:F,postscriptName:w,coords:r})})}}finally{B._free(I)}return{styleValues:Q,axisInfo:e,namedInstances:a}})}getOpentypeName(A){if(A===65535)return null;const Q=this.hbFace;return B.withStack(()=>{const g=B.stackAlloc(4),E=B.stackAlloc(1);B.writeUint32(g,1);let e=B._hb_ot_name_get_utf8(Q,A,0,g,E);if(e===0)return null;const o=B.malloc(e+1);try{return B.writeUint32(g,e+1),B._hb_ot_name_get_utf8(Q,A,0,g,o),e=B.readUint32(g),T.decode(B.HEAPU8.subarray(o,o+e))}finally{B._free(o)}})}destroy(){B._hb_font_destroy(this.hbFont),B._hb_face_destroy(this.hbFace),this.codePoints.destroy()}subset(A){const Q=B._hb_subset_input_create_or_fail();if(Q===0)throw new Error("Failed to create subset input");try{const g=new B.HbSet(B._hb_subset_input_unicode_set(Q));if(g.clear(),A.unicodeRanges==="all")g.invert();else{for(const w of A.unicodeRanges.named)g.union(k[w]);for(const w of A.unicodeRanges.custom)typeof w=="number"?g.add(w):g.addRange(w[0],w[1])}const E=new B.HbSet(B._hb_subset_input_set(Q,6));for(const[w,s]of Object.entries(A.features))s?E.add(Y(w)):E.del(Y(w));for(const w of A.axisValues)switch(w.type){case"single":{B._hb_subset_input_pin_axis_location(Q,this.hbFace,Y(w.tag),w.value);break}case"variable":B._hb_subset_input_set_axis_range(Q,this.hbFace,Y(w.tag),w.value.min,w.value.max,w.value.defaultValue)}const e=B._hb_subset_or_fail(this.hbFace,Q);if(e===0)throw new Error(`Failed to subset ${this.familyName} ${this.subfamilyName}`);const o=B._hb_face_reference_blob(e);B._hb_face_destroy(e);const D=new B.HbBlob(o),C=D.copyAsArray();D.destroy();const a={weight:A.axisValues.find(w=>w.tag==="wght")??this.styleValues.weight,width:A.axisValues.find(w=>w.tag==="wdth")??this.styleValues.width,italic:A.axisValues.find(w=>w.tag==="ital")??this.styleValues.italic,slant:A.axisValues.find(w=>w.tag==="slnt")??this.styleValues.slant},I=[];for(const w of this.axes){const s=A.axisValues.find(G=>G.tag===w.tag);s&&(s.type==="variable"?I.push({tag:w.tag,name:w.name,type:"variable",value:s.value}):I.push({tag:w.tag,name:w.name,type:"single",value:s.value}))}let c=null;if(this.namedInstances){const w={};for(const s of A.axisValues)s.type==="single"&&(w[s.tag]=s.value);A:for(const s of this.namedInstances){for(const[G,r]of Object.entries(s.coords))if(w[G]!==r)continue A;c=s;break}}const i=new B.HbSet;i.setTo(this.codePoints),i.intersect(g);const n=Array.from(i.iterRanges());i.destroy();const F=C[3]|C[2]<<8|C[1]<<16|C[0]<<24;return{familyName:this.familyName,subfamilyName:this.subfamilyName,format:F===Y("OTTO")?"opentype":"truetype",data:C,styleValues:a,axes:I,namedInstance:c,unicodeRanges:n}}finally{B._hb_subset_input_destroy(Q)}}getData(){if(this.faceCount>1){const g=B._hb_face_builder_create(),E=[];try{B.withStack(()=>{const D=B.stackAlloc(4),C=B._hb_face_get_table_tags(this.hbFace,0,0,0);if(C===0)throw new Error("Could not get font table count");const a=B.malloc(C*4);B.writeUint32(D,C),B._hb_face_get_table_tags(this.hbFace,0,D,a);const I=B.readUint32(D);for(let c=0;c<I;c++){const i=B.readUint32(a+c*4),n=B._hb_face_reference_table(this.hbFace,i);if(E.push(n),!B._hb_face_builder_add_table(g,i,n))throw new Error(`Could not add table ${M(i)}`)}});const e=B._hb_face_reference_blob(g),o=new B.HbBlob(e);try{return o.copyAsArray()}finally{o.destroy()}}finally{for(const e of E)B._hb_blob_destroy(e);B._hb_face_destroy(g)}}const A=B._hb_face_reference_blob(this.hbFace),Q=new B.HbBlob(A);try{return Q.copyAsArray()}finally{Q.destroy()}}static getSfntVersion(A){return(A[3]|A[2]<<8|A[1]<<16|A[0]<<24)===Y("OTTO")?"opentype":"truetype"}}const v=x(new URL("/assets/hb-CSAdeCnD.wasm",self.location.href).href),R=async t=>{const A=t.data;try{switch(A.type){case"update-fonts":{K({type:"updated-fonts",message:await W(A.message.loadFonts,A.message.unloadFonts),originId:A.id});break}case"subset-font":{const{subsettedFont:Q,transfer:g}=X(A.message.font,A.message.settings);K({type:"subsetted-font",message:Q,originId:A.id},g);break}case"get-font-data":{const Q=h.get(A.message);if(!Q)throw new Error(`No font with ID ${A.message}`);const g=Q.getData(),E=l.getSfntVersion(g);K({type:"got-font-data",message:{data:g,format:E},originId:A.id},[g]);break}case"close":removeEventListener("message",R)}}catch(Q){postMessage({type:"error",message:Q,originId:A.id})}};addEventListener("message",R);let V=0;const h=new Map,W=async(t,A)=>{await v;for(const E of A){const e=h.get(E);e&&(e.destroy(),h.delete(E))}const Q=l.manyFromData(t),g=[];for(const E of Q){const e={id:V++,uid:E.uid,faceCount:E.faceCount,faceIndex:E.faceIndex,familyName:E.familyName,subfamilyName:E.subfamilyName,styleValues:E.styleValues,fileSize:E.fileSize,axes:E.axes,features:E.features,namedInstances:E.namedInstances,subsetCoverage:E.subsetCoverage,unicodeRanges:Array.from(E.codePoints.iterRanges())};g.push(e),h.set(e.id,E)}return{fonts:g}},X=(t,A)=>{const Q=h.get(t);if(!Q)throw new Error(`No font with ID ${Q}`);const g=Q.subset(A);return{subsettedFont:g,transfer:[g.data.buffer]}};var b=Object.freeze({__proto__:null})})();
